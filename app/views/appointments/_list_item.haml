- patient = appointment.patient
%a{ :name => dom_id(appointment) }
.patient.case-focus.collapsible.collapsed[appointment]
  .basic
    .toggle.ui-icon
    .primary.name
      %h2
        =# image_tag(patient.photo.url(:tiny))
        = patient.to_s(:with_id => true)
      %h3= V1::AppointmentDecorator.new(appointment).title
  .supplement{ :style => "display: none" }
    - appointment.patient_cases.each do |patient_case|
      - case_decorator = V1::PatientCaseDecorator.new(patient_case)
      .patient_case[patient_case]
        .diagnosis
          .case_detail
            %h4= case_decorator.title
            %p.aux
              = patient_case.disease
              - if patient_case.severity && patient_case.severity > 0
                %span.severity{ :class => severity(patient_case).downcase }
                  = "(#{severity(patient_case)})"
            .navigation.noprint
              - if permitted_to? :edit, patient_case
                %ul
                  %li.edit= link_to("<span>Make Changes</span>".html_safe, edit_trip_case_path(patient_case.trip, patient_case, return_to: "schedule", day: params[:day]))
          = render :partial => "xrays/collection", :locals => { :patient_case => patient_case, :xrays => case_decorator.xrays(:pre_op => true), :editable => false }

        .procedure
          - if permitted_to? :create, Operation.new(:patient_case => patient_case)
            %p= link_to "New operation", new_case_operation_path(patient_case), :remote => true, :class => "new_operation#{" hide" if !!patient_case.operation}"
          = render :partial => "operations/inline", :object => patient_case.operation, :as => :operation, :locals => { :options => { :size => :tiny } } if patient_case.operation
